#version 330

// Default color buffer location is 0
// If you create framebuffer your own, you need to take care of it
layout(location=0) out vec4 color;
layout(location=1) out vec4 vDoF;

in vec2 fTexcoord;
in vec3 fNormal;
in vec3 fragPos;
in float fDepth;

uniform float ambientStrength;
uniform vec3 lightPos;
uniform vec3 viewPos;
uniform vec3 lightColor;
uniform sampler2D uSampler;

float focalLen = 0.05;
float Dlens = 0.052;
float Zfocus = 20;
float maxCoC = 10;
float scale = 1;
float sceneRange = 100;

void main()
{
    // Ambient
    //vec3 ambient = ambientStrength * lightColor;

    // Diffuse
    //vec3 norm = normalize(fNormal);
    //vec3 lightDir = normalize(lightPos - fragPos);
    //float diff = max(dot(norm, lightDir), 0.0);
    //vec3 diffuse = diff * lightColor;

    // Specular
    //float specularStrength = 0.5f;
    //vec3 viewDir = normalize(viewPos - fragPos);
    //vec3 reflectDir = reflect(-lightDir, norm);
    //float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32);
    //vec3 specular = specularStrength * spec * lightColor;

    //vec3 result = (ambient + diffuse + specular);
    float pixCoC = abs(Dlens * focalLen * (Zfocus - fDepth) / (Zfocus * (fDepth - focalLen)));
    float blur = clamp(pixCoC * scale / maxCoC, 0.0, 1.0);
    vDoF = vec4(fDepth / sceneRange, blur, 0.0, 0.0); 
	//vDoF = vec4(0.0, 1.0, 1.0, 1.0);  	
    color = texture(uSampler, fTexcoord);
}
