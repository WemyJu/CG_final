#version 330

in vec2 TexCoords;
out vec4 color;

uniform vec2 offsetData[13];

uniform sampler2D screenTexture;
uniform sampler2D depthBlurTexture;

const int NUM_DOF_TAPS = 12;
const int maxCoC = 10;
const float dx = 0.5f/600.0f;
const float dy = 0.5f/800.0f;

// these are used to tuned the "pixel-bleeding" fix
const float bleedingBias = 0.02f;
const float bleedingMul = 30.0f;

void main()
{
    vec4 colorSum = texture(screenTexture, TexCoords);
    float totalContribution = 1.0f;
    vec4 centerDepthBlur = texture(depthBlurTexture, TexCoords);
/*
    float sizeCoC = centerDepthBlur.y * maxCoC;
    for(int i=0; i<NUM_DOF_TAPS; i++){
        vec2 tapCoord = TexCoords + filterTaps[i] * sizeCoC;
        vec4 tapColor = texture(screenTexture, tapCoord);
        vec4 tapDepthBlur = texture(depthBlurTexture, tapCoord);
        float tapContribution = (tapDepthBlur.x > centerDepthBlur.x) ? 1.0f : tapDepthBlur.y;
        colorSum += tapColor * tapContribution;
        totalContribution += tapContribution;
    }
    color = colorSum / totalContribution;
	*/
	
	
	
	//color = centerDepthBlur;
	//color = vec4(centerDepthBlur.y,centerDepthBlur.y,centerDepthBlur.y,0.0);
	color = vec4(1.0 ,offsetData[12].x,offsetData[12].x,0.0);
	
}
