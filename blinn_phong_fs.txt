#version 330

// Default color buffer location is 0
// If you create framebuffer your own, you need to take care of it
layout(location=0) out vec4 color;

in vec2 fTexcoord;
in vec3 fNormal;
in vec3 fragPos;

uniform float ambientStrength;
uniform vec3 lightPos;
uniform vec3 viewPos;
uniform vec3 lightColor;
uniform sampler2D uSampler;

void main()
{
    // Ambient
    vec3 ambient = ambientStrength * lightColor;

    // Diffuse
    vec3 norm = normalize(fNormal);
    vec3 lightDir = normalize(lightPos - fragPos);
    float diff = max(dot(norm, lightDir), 0.0);
    vec3 diffuse = diff * lightColor;

    // Specular
    float specularStrength = 0.5f;
    float spec = 0.0f;
    vec3 viewDir = normalize(viewPos - fragPos);
    if(dot(norm, lightDir) > 0){
        vec3 H = normalize(lightDir+viewDir);
        spec = pow(max(dot(norm, H), 0.0), 32);
    }
    vec3 specular = specularStrength * spec * lightColor;

    vec3 result = (ambient + diffuse + specular);
	color = vec4(result, 1.0f) * texture(uSampler, fTexcoord);
}
